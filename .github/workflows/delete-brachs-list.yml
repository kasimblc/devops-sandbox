name: Delete Closed PR Branches From Multiple Repos

on:
  schedule:
    - cron: '0 3 * * 1' # Her Pazartesi 03:00 UTC
  workflow_dispatch:

jobs:
  delete-closed-pr-branches:
    runs-on: ubuntu-latest
    steps:
      - name: Install GitHub CLI & jq
        run: |
          sudo apt update
          sudo apt install -y gh jq

      - name: Delete closed PR branches from multiple repositories
        env:
          GH_TOKEN: ${{ secrets.ALL }}
        run: |
          echo "üîê Auth status:"
          gh auth status || echo "Auth not established"

          # üëá ƒ∞≈ülem yapƒ±lacak repository listesi (owner/repo formatƒ±nda)
          repos=(
            kasimblc/test1
            kasimblc/test2
            kasimblc/test3
          )

          # üõ°Ô∏è Korunacak ana branch isimleri
          protected_branches=("main" "master" "staging" "release")

          for repo in "${repos[@]}"; do
            echo "üì¶ Processing repository: $repo"

            # Kapalƒ± PR'lerden gelen branch isimlerini √ßek
            gh pr list --repo "$repo" --state closed --json headRefName \
            | jq -r '.[].headRefName' \
            | while read branch; do

                # Ana branch'lerden biri mi? Kontrol et
                skip=false
                for protected in "${protected_branches[@]}"; do
                  if [[ "$branch" == "$protected" ]]; then
                    echo "‚ö†Ô∏è '$branch' is a protected branch. Skipping."
                    skip=true
                    break
                  fi
                done

                if [ "$skip" = false ]; then
                  echo "üîç Checking if branch '$branch' exists in $repo..."
                  if gh api repos/$repo/git/refs/heads/$branch > /dev/null 2>&1; then
                    echo "üóëÔ∏è Deleting branch '$branch' from $repo"
                    gh api \
                      -X DELETE \
                      -H "Authorization: token $GH_TOKEN" \
                      /repos/$repo/git/refs/heads/$branch
                  else
                    echo "‚ö†Ô∏è Branch '$branch' does not exist in $repo. Skipping."
                  fi
                fi
              done
          done
