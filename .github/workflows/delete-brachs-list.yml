name: Delete Closed PR Branches (Auto Repo List)

on:
  schedule:
    - cron: '0 3 * * 1' # Her Pazartesi 03:00 UTC
  workflow_dispatch:

jobs:
  delete-closed-pr-branches:
    runs-on: ubuntu-latest
    steps:
      - name: Install GitHub CLI & jq
        run: |
          sudo apt update
          sudo apt install -y gh jq

      - name: Delete closed PR branches from all kasimblc repositories
        env:
          GH_TOKEN: ${{ secrets.ALL }}
          BRANCH_PATTERN: "silme"     # √∂rnek: "CU-"
          PR_PATTERN: "silme"         # √∂rnek: "ClickUp"
        run: |
          echo "üîê Auth status:"
          gh auth status || echo "Auth not established"

          echo "üì• Fetching all repositories for user kasimblc..."
          repos=$(gh repo list kasimblc --limit 1000 --json nameWithOwner -q '.[].nameWithOwner')

          protected_branches=("main" "master" "develop" "release")

          for repo in $repos; do
            echo "üì¶ Processing repository: $repo"

            gh pr list --repo "$repo" --state closed --json title,body,headRefName \
            | jq -c '.[]' \
            | while read pr; do
                title=$(echo "$pr" | jq -r '.title')
                body=$(echo "$pr" | jq -r '.body')
                branch=$(echo "$pr" | jq -r '.headRefName')

                # Ana branch'leri koru
                skip=false
                for protected in "${protected_branches[@]}"; do
                  if [[ "$branch" == "$protected" ]]; then
                    echo "‚ö†Ô∏è '$branch' is a protected branch. Skipping."
                    skip=true
                    break
                  fi
                done
                [ "$skip" = true ] && continue

                # Branch filtre kontrol√º
                if [ -n "$BRANCH_PATTERN" ] && [[ "$branch" != *"$BRANCH_PATTERN"* ]]; then
                  echo "‚ÑπÔ∏è Branch '$branch' does not match pattern '$BRANCH_PATTERN'. Skipping."
                  continue
                fi

                # PR filtre kontrol√º
                if [ -n "$PR_PATTERN" ] && [[ "$title" != *"$PR_PATTERN"* && "$body" != *"$PR_PATTERN"* ]]; then
                  echo "‚ÑπÔ∏è PR '$title' does not match PR pattern '$PR_PATTERN'. Skipping."
                  continue
                fi

                # Silme i≈ülemi
                echo "üîç Checking if branch '$branch' exists in $repo..."
                if gh api repos/$repo/git/refs/heads/$branch > /dev/null 2>&1; then
                  echo "üóëÔ∏è Deleting branch '$branch' from $repo"
                  gh api \
                    -X DELETE \
                    -H "Authorization: token $GH_TOKEN" \
                    /repos/$repo/git/refs/heads/$branch
                else
                  echo "‚ö†Ô∏è Branch '$branch' does not exist in $repo. Skipping."
                fi
              done
          done
