name: Staging Deploy

on:
  workflow_dispatch:
    inputs:
      environment:
        description: >
          Deployment Environment.
          'all' → tüm staging deploy'ları çalışır,
          'staging-1', 'staging-2' gibi spesifik değerler.
        required: true
        default: "all"
        type: string
      action:
        description: "What action would you like to perform?"
        required: true
        default: "deploy"
        type: choice
        options:
          - deploy
          - rollback

jobs:
  deploy-staging:
    name: "Deploy Staging Environments"
    runs-on: ubuntu-latest
    # GitHub Environments'da STAGING_EXAMPLE_1 adında tanımlı environment değişkenini kullanıyoruz.
    environment: STAGING_EXAMPLE_1
    steps:
      - name: Tanımlı Staging Sunucularını Ayarla
        id: define_matrix
        run: |
          # Eğer tüm ortamlar deploy edilecekse, GitHub Environment üzerinden gelen JSON array'i kullanıyoruz.
          if [ "${{ inputs.environment }}" == "all" ]; then
            echo "matrix_env=$STAGING_EXAMPLE_1" >> $GITHUB_ENV
          else
            echo "matrix_env=[\"${{ inputs.environment }}\"]" >> $GITHUB_ENV
          fi

  deploy-instances:
    needs: deploy-staging
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 1  # İşlemleri sırayla çalıştırır.
      matrix:
        environment: ${{ fromJson(env.matrix_env) }}
    steps:
      - name: Test Deploy - ${{ matrix.environment }}
        run: echo "Test Mode - Deploying to ${{ matrix.environment }} with action ${{ inputs.action }}"
