name: Staging Deploy 2

on:
  workflow_dispatch:
    inputs:
      environment:
        description: >
          Deployment Environment.
          'all' → tüm staging deploy'ları çalışır,
          'staging-1', 'staging-2' gibi spesifik değerler.
        required: true
        default: "all"
        type: string
      action:
        description: "What action would you like to perform?"
        required: true
        default: "deploy"
        type: choice
        options:
          - deploy
          - rollback

jobs:
  deploy-staging:
    name: "Deploy Staging Environments"
    runs-on: windows-latest
    env:
      STAGING_SERVERS: '["staging-1", "staging-2", "staging-3", "staging-4"]'
    outputs:
      matrix_env: ${{ steps.define_matrix.outputs.matrix_env }}
    steps:
      - name: Tanımlı Staging Sunucularını Ayarla
        id: define_matrix
        shell: pwsh
        run: |
          if ("${{ github.event.inputs.environment }}" -eq "all") {
            "matrix_env=${{ env.STAGING_SERVERS }}" >> $env:GITHUB_OUTPUT
          } else {
            "matrix_env=[`"${{ github.event.inputs.environment }}`"]" >> $env:GITHUB_OUTPUT
          }

  deploy-instances:
    needs: deploy-staging
    runs-on: windows-latest
    strategy:
      max-parallel: 1  # Paralel çalışmayı önler, işlemleri sırayla çalıştırır.
      matrix:
        environment: ${{ fromJson(needs.deploy-staging.outputs.matrix_env) }}
    steps:
      - name: Test Deploy - ${{ matrix.environment }}
        shell: pwsh
        run: |
          Write-Output "Test Mode - Deploying to ${{ matrix.environment }} with action ${{ github.event.inputs.action }}"
