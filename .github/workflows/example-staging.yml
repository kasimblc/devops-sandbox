name: Example Staging CiCd  # İsim değişmeli !!!

on:
  workflow_dispatch:
    inputs:
      environment:
        description: >
          Staging Environment. 
          'all' → Tüm staging deploy'ları çalışır,
          yada 'staging-1', 'staging-2' gibi spesifik değerler.
        required: true
        default: "all"
        type: string
      action:
        description: "Yapılacak işlem?"
        required: true
        default: "deploy"
        type: choice
        options:
          - deploy
          - rollback
          - first-setup
          
jobs:
  staging-jobs:
    name: "Staging Environments"
    runs-on: windows-latest
    env:  # Gerekli sunucuları burada tanımlayınız. İsim değişmeli !!!
      STAGING_SERVERS: '["staging-1", "staging-2", "staging-3", "staging-4"]'
    outputs:
      matrix_env: ${{ steps.define_matrix.outputs.matrix_env }}
    steps:
      - name: Tanımlı Staging Sunucularını Ayarla
        id: define_matrix
        shell: pwsh
        run: |
          $environment = "${{ github.event.inputs.environment }}"
          Write-Output "Using environment: $environment"
          
          # STAGING_SERVERS ortam değişkenini JSON dizisine dönüştürüyoruz.
          $allowedEnvironments = $env:STAGING_SERVERS | ConvertFrom-Json
          
          if ($environment -eq "all") {
            $output = "matrix_env=" + $env:STAGING_SERVERS
            Write-Output "Output: $output"
            Out-File -FilePath $env:GITHUB_OUTPUT -InputObject $output -Append
          }
          elseif ($allowedEnvironments -contains $environment) {
            $output = "matrix_env=[" + '"' + $environment + '"' + "]"
            Write-Output "Output: $output"
            Out-File -FilePath $env:GITHUB_OUTPUT -InputObject $output -Append
          }
          else {
            Write-Error "Invalid environment: $environment. Allowed values are 'all' or one of: $($allowedEnvironments -join ', ')"
          }


  staging-instances:
    needs: staging-jobs
    runs-on: windows-latest
    strategy:
      max-parallel: 1  # Paralel çalışmayı önler, işlemleri sırayla çalıştırır.
      matrix:
        environment: ${{ fromJson(needs.jobs-staging.outputs.matrix_env) }}
    steps:
      - name: ${{ matrix.environment }} - ${{ github.event.inputs.action }}
        shell: pwsh
        run: |
          Write-Output "Test Mode - Deploying to $($matrix.environment) with action ${{ github.event.inputs.action }}"
